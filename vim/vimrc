" Automatically install missing plugins on startup
autocmd VimEnter *
  \  if len(filter(values(g:plugs), '!isdirectory(v:val.dir)'))
  \|   PlugInstall --sync | q
  \| endif

call plug#begin('~/.vim/plugged')
" Nerdtree
Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }

" Color schemes
Plug 'morhetz/gruvbox'
Plug 'chriskempson/tomorrow-theme'

" Powerline alternative
Plug 'vim-airline/vim-airline'

" Jedi to Python autocompletion
Plug 'davidhalter/jedi-vim'

" fugitive.vim: a Git wrapper so awesome, it should be illegal
Plug 'tpope/vim-fugitive'
Plug 'mhinz/vim-signify'

" Auto Pairsby by MIAO JIANG
Plug 'jiangmiao/auto-pairs'

" Finder for Vim.
Plug 'kien/ctrlp.vim'
Plug 'rking/ag.vim'

" Vim motions on speed!
Plug 'easymotion/vim-easymotion'

" Black
Plug 'ambv/black'
call plug#end()

" Custom settings
syntax on
colorscheme gruvbox
set background=dark
set encoding=utf-8

" VCS tracker settings
set updatetime=400
let g:signify_vcs_list = [ 'git', 'hg' ]
let g:signify_realtime = 1

" mappings:
        imap jk <esc>
        let g:mapleader = "\<Space>"
        " easymotion
        map <Leader> <Plug>(easymotion-prefix)
        " NerdTree settings
        let NERDTreeShowHidden=1
        let NERDTreeIgnore = ['\.pyc$', '\.git$', '\.swp$', '\~$', '\.idea$']
        map <C-n> :NERDTreeToggle<CR>
        " vcs jumping
        nmap gj <plug>(signify-next-hunk)
        nmap gk <plug>(signify-prev-hunk)

" line numbers & tabs to spaces
set number
set expandtab 

" backgroun search words
set hlsearch
set incsearch

" Enable folding
set foldmethod=indent
set foldlevel=99

" Python specific wraps & indents
au BufNewFile,BufRead *.py
    \ set tabstop=4 |
    \ set softtabstop=4 |
    \ set shiftwidth=4 |
    \ set textwidth=79 |
    \ set expandtab |
    \ set autoindent |
    \ set fileformat=unix |

" HTML, JS, CSS specific settings
au BufNewFile,BufRead *.js,*.html,*.css
    \ set tabstop=2 |
    \ set softtabstop=2 |
    \ set shiftwidth=2 |

" Black settings
let g:black_linelength=79 
